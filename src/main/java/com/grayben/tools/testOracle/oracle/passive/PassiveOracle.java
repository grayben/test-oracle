package com.grayben.tools.testOracle.oracle.passive;

import com.grayben.tools.math.function.builder.BiPredicateBuilder;

import java.util.function.BiPredicate;

/**
 * Verifies input/output pairs generated by a related system under test.
 * <p>
 * A simple facade for {@link BiPredicate} which defines a passive test oracle.
 * <p>
 * Created by Ben Gray on 28/01/2016.
 *
 * @see com.grayben.tools.testOracle.SystemUnderTest
 * @param <I> the type of input to the related system under test
 * @param <O> the type of output from the related system under test
 */
public interface PassiveOracle<I, O> extends BiPredicate<I, O> {

    /**
     * A builder. Intended to provide assistance in incrementally constructing
     * passive oracles in future releases.
     *
     * @param <I> the type of input to the related system under test
     * @param <O> the type of output from the related system under test
     */
    class Builder<I, O> extends BiPredicateBuilder<I, O> {

        /**
         * Construct a builder based upon the specified passive oracle.
         *
         * @param passiveOracle the passive oracle upon which to base the builder.
         */
        public Builder(PassiveOracle<I, O> passiveOracle) {
            super(passiveOracle);
        }
    }

    /**
     *
     * @param input the test input
     * @param actualOutput the output of the system under test on the specified input
     * @return true if and only if the input and output pair satisfies this passive oracle.
     */
    @Override
    boolean test(I input, O actualOutput);
}
